name: Build Test and Release

on:
  push:
    branches:
      - main
      - beta
      - "feature/*"
      - "fix/*"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  version:
    name: Generate version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.10.2
      - name: Create annotation for build error
        run: |
          echo "::notice::FullSemVer ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "::notice::PreReleaseTagWithDash ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
        id: go

      - name: Run go build
        run: go build -v ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: Test
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic -json ./... > test-report.out

      - name: Go Vet
        run: go vet ./... 2> govet-report.out

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master # https://github.com/marketplace/actions/sonarcloud-scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          args: >
            -Dsonar.projectVersion=${{ needs.version.outputs.FullSemVer }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: Run golangci-lint # https://github.com/marketplace/actions/run-golangci-lint
        uses: golangci/golangci-lint-action@v3
